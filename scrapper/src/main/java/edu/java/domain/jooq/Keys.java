/*
 * This file is generated by jOOQ.
 */
package edu.java.domain.jooq;


import edu.java.domain.jooq.tables.Assignment;
import edu.java.domain.jooq.tables.GithubLink;
import edu.java.domain.jooq.tables.Link;
import edu.java.domain.jooq.tables.StackoverflowLink;
import edu.java.domain.jooq.tables.TelegramChat;
import edu.java.domain.jooq.tables.records.AssignmentRecord;
import edu.java.domain.jooq.tables.records.GithubLinkRecord;
import edu.java.domain.jooq.tables.records.LinkRecord;
import edu.java.domain.jooq.tables.records.StackoverflowLinkRecord;
import edu.java.domain.jooq.tables.records.TelegramChatRecord;

import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AssignmentRecord> CONSTRAINT_5A1 = Internal.createUniqueKey(Assignment.ASSIGNMENT, DSL.name("CONSTRAINT_5A1"), new TableField[] { Assignment.ASSIGNMENT.CHAT_ID, Assignment.ASSIGNMENT.LINK_ID }, true);
    public static final UniqueKey<GithubLinkRecord> CONSTRAINT_D8 = Internal.createUniqueKey(GithubLink.GITHUB_LINK, DSL.name("CONSTRAINT_D8"), new TableField[] { GithubLink.GITHUB_LINK.ID }, true);
    public static final UniqueKey<LinkRecord> CONSTRAINT_2 = Internal.createUniqueKey(Link.LINK, DSL.name("CONSTRAINT_2"), new TableField[] { Link.LINK.URL }, true);
    public static final UniqueKey<LinkRecord> CONSTRAINT_23 = Internal.createUniqueKey(Link.LINK, DSL.name("CONSTRAINT_23"), new TableField[] { Link.LINK.ID }, true);
    public static final UniqueKey<StackoverflowLinkRecord> CONSTRAINT_93 = Internal.createUniqueKey(StackoverflowLink.STACKOVERFLOW_LINK, DSL.name("CONSTRAINT_93"), new TableField[] { StackoverflowLink.STACKOVERFLOW_LINK.ID }, true);
    public static final UniqueKey<TelegramChatRecord> CONSTRAINT_B = Internal.createUniqueKey(TelegramChat.TELEGRAM_CHAT, DSL.name("CONSTRAINT_B"), new TableField[] { TelegramChat.TELEGRAM_CHAT.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AssignmentRecord, TelegramChatRecord> CONSTRAINT_5 = Internal.createForeignKey(Assignment.ASSIGNMENT, DSL.name("CONSTRAINT_5"), new TableField[] { Assignment.ASSIGNMENT.CHAT_ID }, Keys.CONSTRAINT_B, new TableField[] { TelegramChat.TELEGRAM_CHAT.ID }, true);
    public static final ForeignKey<AssignmentRecord, LinkRecord> CONSTRAINT_5A = Internal.createForeignKey(Assignment.ASSIGNMENT, DSL.name("CONSTRAINT_5A"), new TableField[] { Assignment.ASSIGNMENT.LINK_ID }, Keys.CONSTRAINT_23, new TableField[] { Link.LINK.ID }, true);
    public static final ForeignKey<GithubLinkRecord, LinkRecord> CONSTRAINT_D = Internal.createForeignKey(GithubLink.GITHUB_LINK, DSL.name("CONSTRAINT_D"), new TableField[] { GithubLink.GITHUB_LINK.ID }, Keys.CONSTRAINT_23, new TableField[] { Link.LINK.ID }, true);
    public static final ForeignKey<StackoverflowLinkRecord, LinkRecord> CONSTRAINT_9 = Internal.createForeignKey(StackoverflowLink.STACKOVERFLOW_LINK, DSL.name("CONSTRAINT_9"), new TableField[] { StackoverflowLink.STACKOVERFLOW_LINK.ID }, Keys.CONSTRAINT_23, new TableField[] { Link.LINK.ID }, true);
}
